# 00-namespace.yaml - Define um namespace para organizar os recursos do blog
apiVersion: v1
kind: Namespace
metadata:
  name: blog
---
# 01-secret.yaml – Armazena credenciais do banco MariaDB
apiVersion: v1
kind: Secret
metadata:
  name: mariadb-pass
  namespace: blog
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: myrootpass      # Senha do root
  MYSQL_PASSWORD: myblogpass           # Senha do usuário de app
  MYSQL_USER: bloguser                 # Usuário para o WordPress
  MYSQL_DATABASE: blogdb               # Nome do banco a ser criado
---
# 02-pvc-mariadb.yaml – Volume persistente para o banco de dados
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
  namespace: blog
spec:
  accessModes: ["ReadWriteOnce"]       # Apenas um pod pode montar para leitura e escrita
  resources:
    requests:
      storage: 1Gi                      # Solicita 1 GiB de espaço
---
# 03-pvc-wordpress.yaml – Volume persistente para o WordPress
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pvc
  namespace: blog
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
---
# 04-deploy-mariadb.yaml – Define o Deployment do MariaDB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: blog
spec:
  replicas: 1                           # Apenas uma instância do banco
  selector:
    matchLabels: { app: mariadb }
  template:
    metadata:
      labels: { app: mariadb }
    spec:
      containers:
        - name: mariadb
          image: mariadb:11             # Usa imagem oficial do MariaDB
          envFrom:
            - secretRef:
                name: mariadb-pass      # Carrega variáveis do Secret
          ports:
            - containerPort: 3306       # Porta padrão do MariaDB
          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/mysql # Local onde os dados são armazenados
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: db-pvc           # Usa o PVC criado para persistência
---
# 05-svc-mariadb.yaml – Serviço interno para o MariaDB (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: mariadb-svc
  namespace: blog
spec:
  ports:
    - port: 3306                        # Exposição da porta do banco
  selector:
    app: mariadb
---
# 06-deploy-wordpress.yaml – Deployment do WordPress
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: blog
spec:
  replicas: 1                           # Apenas uma instância do WordPress
  selector:
    matchLabels: { app: wordpress }
  template:
    metadata:
      labels: { app: wordpress }
    spec:
      containers:
        - name: wordpress
          image: wordpress:6.5-apache   # Imagem oficial com Apache
          env:
            - name: WORDPRESS_DB_HOST
              value: mariadb-svc.blog.svc.cluster.local:3306  # Endereço do banco no cluster
            - name: WORDPRESS_DB_USER
              valueFrom: { secretKeyRef: { name: mariadb-pass, key: MYSQL_USER } }
            - name: WORDPRESS_DB_PASSWORD
              valueFrom: { secretKeyRef: { name: mariadb-pass, key: MYSQL_PASSWORD } }
            - name: WORDPRESS_DB_NAME
              valueFrom: { secretKeyRef: { name: mariadb-pass, key: MYSQL_DATABASE } }
          ports:
            - containerPort: 80         # Porta padrão HTTP
          volumeMounts:
            - name: wp-storage
              mountPath: /var/www/html  # Onde o WordPress salva arquivos
      volumes:
        - name: wp-storage
          persistentVolumeClaim:
            claimName: wp-pvc           # Usa PVC para persistência
---
# 07-svc-wordpress.yaml – Serviço externo via NodePort
apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
  namespace: blog
spec:
  type: NodePort                        # Exposto externamente
  ports:
    - port: 80                          # Porta interna do serviço
      targetPort: 80                    # Porta no container
      nodePort: 30080                   # Porta exposta no nó (personalizada)
  selector:
    app: wordpress
